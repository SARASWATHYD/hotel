buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.+'
    }
}

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
    }
    mavenCentral()
    jcenter()
}

apply plugin: 'java'                              // standard Java tasks
apply plugin: 'war'                               // standard Web Archive plugin
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks
appengine.tools.cloudSdkHome="/Users/saraswathy/Downloads/google-cloud-sdk"

dependencies {
    compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'jstl:jstl:1.2'

    compile "com.googlecode.objectify:objectify:5.1.23"
// Add your dependencies here.
//  compile 'com.google.cloud:google-cloud:+'   // Latest Cloud API's http://googlecloudplatform.github.io/google-cloud-java

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.33'
    testCompile 'org.mockito:mockito-all:1.10.19'

    testCompile 'com.google.appengine:appengine-testing:+'
    testCompile 'com.google.appengine:appengine-api-stubs:+'
    testCompile 'com.google.appengine:appengine-tools-sdk:+'
}

// Always run unit tests
appengineDeploy.dependsOn test
//appengineStage.dependsOn test

appengine {  // App Engine tasks configuration
    tools{
        cloudSdkHome=  "/Users/saraswathy/Downloads/google-cloud-sdk"
    }

    run {
        port = 8080
        jvmFlags = ["-Dappengine.fullscan.seconds=4"]
    }

    deploy {   // deploy configuration
        project ="hotel"
        stopPreviousVersion = false
        promote = false
        version =  "v1"

    }
    explodeWar {
        with copySpec {
            from "${projectDir}/../gaeConfigFiles"
            include '*.xml'
            into 'WEB-INF'
        }
    }
}

test {
    useJUnit()
    testLogging.showStandardStreams = true
    beforeTest { descriptor ->
        logger.lifecycle("test: " + descriptor + "  Running")
    }

    onOutput { descriptor, event ->
        logger.lifecycle("test: " + descriptor + ": " + event.message )
    }
    afterTest { descriptor, result ->
        logger.lifecycle("test: " + descriptor + ": " + result )
    }
}

group   = "com.example.appenginej8"        // Generated output GroupId
version = "1.0-SNAPSHOT"       // Version in generated output

sourceCompatibility = 1.8     // App Engine Flexible uses Java 8
targetCompatibility = 1.8     // App Engine Flexible uses Java 8